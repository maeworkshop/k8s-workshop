spring:
  profiles:
    active: dev
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: group_id
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema.registry.url: http://localhost:8081
        specific.avro.reader: true
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: http://localhost:8081
app:
  generator:
    constraint:
      min-values:
        TEMP: 20.0
        HUMIDITY: 30.0
      max-values:
        TEMP: 35.0
        HUMIDITY: 100.0
    sensor-data:
      locations:
        - name: location1
          devices:
            - name: device1-1
              sensors:
                - name: sensor1-1-1
                  type: HUMIDITY
                - name: sensor1-1-2
                  type: TEMP
        - name: location2
          devices:
            - name: device2
              sensors:
                - name: sensor2-2-1
                  type: HUMIDITY
                - name: sensor2-2-2
                  type: TEMP
        - name: location3
          devices:
            - name: device3-1
              sensors:
                - name: sensor3-1-1
                  type: HUMIDITY
                - name: sensor3-1-2
                  type: TEMP

  messaging:
#    serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
#    scheme-registry-url: http://localhost:8081
    topics:
      SENSOR_DATA:
        name: sensor-data
        partition-key: partitionKey